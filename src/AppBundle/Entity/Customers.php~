<?php

namespace AppBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * Customers
 *
 * @ORM\Table(name="customers")
 * @ORM\Entity(repositoryClass="AppBundle\Repository\CustomersRepository")
 */
class Customers
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var int
     *
     * @ORM\Column(name="nsId", type="integer")
     */
    private $nsId;

    /**
     * @var string
     *
     * @ORM\Column(name="name", type="string", length=255)
     */
    private $name;

    /**
     * @var int
     *
     * @ORM\Column(name="nsAddressId", type="integer")
     */
    private $nsAddressId;

    /**
     * @ORM\OneToMany(targetEntity="Orders", mappedBy="customer")
     */
    private $orders;

    /**
     * @ORM\OneToMany(targetEntity="OrdersStanding", mappedBy="customer")
     */
    private $ordersStanding;

    /**
     * @ORM\OneToMany(targetEntity="OrderItems", mappedBy="customer")
     */
    private $orderItems;

    /**
     * Constructor
     */
    public function __construct()
    {
        $this->orders = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * To String
     */
    public function __toString()
    {
        return $this->name;
    }

    /**
     * Get id
     *
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set name
     *
     * @param string $name
     *
     * @return Customers
     */
    public function setName($name)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Get name
     *
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }



    /**
     * Add order
     *
     * @param \AppBundle\Entity\Orders $order
     *
     * @return Customers
     */
    public function addOrder(\AppBundle\Entity\Orders $order)
    {
        $this->orders[] = $order;

        return $this;
    }

    /**
     * Remove order
     *
     * @param \AppBundle\Entity\Orders $order
     */
    public function removeOrder(\AppBundle\Entity\Orders $order)
    {
        $this->orders->removeElement($order);
    }

    /**
     * Get orders
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getOrders()
    {
        return $this->orders;
    }

    /**
     * Add orderItem
     *
     * @param \AppBundle\Entity\OrderItems $orderItem
     *
     * @return Customers
     */
    public function addOrderItem(\AppBundle\Entity\OrderItems $orderItem)
    {
        $this->orderItems[] = $orderItem;

        return $this;
    }

    /**
     * Remove orderItem
     *
     * @param \AppBundle\Entity\OrderItems $orderItem
     */
    public function removeOrderItem(\AppBundle\Entity\OrderItems $orderItem)
    {
        $this->orderItems->removeElement($orderItem);
    }

    /**
     * Get orderItems
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getOrderItems()
    {
        return $this->orderItems;
    }

    /**
     * Set nsId
     *
     * @param integer $nsId
     *
     * @return Customers
     */
    public function setNsId($nsId)
    {
        $this->nsId = $nsId;

        return $this;
    }

    /**
     * Get nsId
     *
     * @return integer
     */
    public function getNsId()
    {
        return $this->nsId;
    }

    /**
     * Set nsAddressId
     *
     * @param integer $nsAddressId
     *
     * @return Customers
     */
    public function setNsAddressId($nsAddressId)
    {
        $this->nsAddressId = $nsAddressId;

        return $this;
    }

    /**
     * Get nsAddressId
     *
     * @return integer
     */
    public function getNsAddressId()
    {
        return $this->nsAddressId;
    }

    /**
     * Add ordersStanding
     *
     * @param \AppBundle\Entity\OrdersStanding $ordersStanding
     *
     * @return Customers
     */
    public function addOrdersStanding(\AppBundle\Entity\OrdersStanding $ordersStanding)
    {
        $this->ordersStanding[] = $ordersStanding;

        return $this;
    }

    /**
     * Remove ordersStanding
     *
     * @param \AppBundle\Entity\OrdersStanding $ordersStanding
     */
    public function removeOrdersStanding(\AppBundle\Entity\OrdersStanding $ordersStanding)
    {
        $this->ordersStanding->removeElement($ordersStanding);
    }

    /**
     * Get ordersStanding
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getOrdersStanding()
    {
        return $this->ordersStanding;
    }
}
