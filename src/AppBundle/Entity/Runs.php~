<?php

namespace AppBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * Runs
 *
 * @ORM\Table(name="runs")
 * @ORM\Entity(repositoryClass="AppBundle\Repository\RunsRepository")
 */
class Runs
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var int
     *
     * @ORM\Column(name="nsId", type="integer")
     */
    private $nsId;

    /**
     * @var string
     *
     * @ORM\Column(name="name", type="string", length=255)
     */
    private $name;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="time", type="time")
     */
    private $time;

    /**
     * @ORM\OneToMany(targetEntity="Orders", mappedBy="run")
     */
    private $orders;

    /**
     * @ORM\OneToMany(targetEntity="OrdersStanding", mappedBy="run")
     */
    private $ordersStanding;

    /**
     * To String
     */
    public function __toString()
    {
        return $this->name;
    }

    /**
     * Get id
     *
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set name
     *
     * @param string $name
     *
     * @return Runs
     */
    public function setName($name)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Get name
     *
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Set time
     *
     * @param \DateTime $time
     *
     * @return Runs
     */
    public function setTime($time)
    {
        $this->time = $time;

        return $this;
    }

    /**
     * Get time
     *
     * @return \DateTime
     */
    public function getTime()
    {
        return $this->time;
    }
    /**
     * Constructor
     */
    public function __construct()
    {
        $this->orders = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * Add order
     *
     * @param \AppBundle\Entity\Orders $order
     *
     * @return Runs
     */
    public function addOrder(\AppBundle\Entity\Orders $order)
    {
        $this->orders[] = $order;

        return $this;
    }

    /**
     * Remove order
     *
     * @param \AppBundle\Entity\Orders $order
     */
    public function removeOrder(\AppBundle\Entity\Orders $order)
    {
        $this->orders->removeElement($order);
    }

    /**
     * Get orders
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getOrders()
    {
        return $this->orders;
    }

    /**
     * Set nsId
     *
     * @param integer $nsId
     *
     * @return Runs
     */
    public function setNsId($nsId)
    {
        $this->nsId = $nsId;

        return $this;
    }

    /**
     * Get nsId
     *
     * @return integer
     */
    public function getNsId()
    {
        return $this->nsId;
    }

    /**
     * Add ordersStanding
     *
     * @param \AppBundle\Entity\OrdersStanding $ordersStanding
     *
     * @return Runs
     */
    public function addOrdersStanding(\AppBundle\Entity\OrdersStanding $ordersStanding)
    {
        $this->ordersStanding[] = $ordersStanding;

        return $this;
    }

    /**
     * Remove ordersStanding
     *
     * @param \AppBundle\Entity\OrdersStanding $ordersStanding
     */
    public function removeOrdersStanding(\AppBundle\Entity\OrdersStanding $ordersStanding)
    {
        $this->ordersStanding->removeElement($ordersStanding);
    }

    /**
     * Get ordersStanding
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getOrdersStanding()
    {
        return $this->ordersStanding;
    }
}
